#include <iostream>
#include <string.h> 
using namespace std;

string StringText;
string codeword;
int j = 0;
int i = 0;

int main ()
{
  
  
  //Input for Message and Cipher
  cout << "Please type in text string to encrypt" << endl;

  getline(cin, StringText);

  cout << "Please enter the cipher word" << endl;

  getline(cin, codeword);
  
  
  //Adjust Cipher to repeat to Message Length
  int StringTextLength = StringText.length();
  char AdjustedKeyword [StringTextLength];
  for (i = 0; i < StringText.length(); ++i , ++j)
   {
     if (j == codeword.length())
      j = 0;
    
      AdjustedKeyword[i] = codeword[j];
   }

   AdjustedKeyword[i] = '\0';
  
  
  //Turn Message and Cipher into capitals to keep consistant 0-25 and then ecrypt
  char EncryptedMessage[StringTextLength];
  for (int i = 0; i < StringText.length(); i++)
  {
    if(StringText[i]>=97 && StringText[i]<=122)
	    {
		StringText[i]=StringText[i]-32;
	    }
    if(AdjustedKeyword[i] >=97 && AdjustedKeyword[i] <=122)
	    {
		AdjustedKeyword[i] = AdjustedKeyword[i]-32;
	    }

   int offset =  (StringText[i]+AdjustedKeyword[i]) %26;

   EncryptedMessage[i] = offset + 'A';
  }

  //Decrypt Message that has already gone through above process
  char RevealedMessage[StringTextLength];
  for (i = 0; i < StringText.length(); i++)
  {
    RevealedMessage[i] = (((EncryptedMessage[i] - AdjustedKeyword[i] +26) %26) + 'A' );


    if (StringText[i] >=32 && StringText[i] <= 64)
    {
      RevealedMessage[i] = StringText[i];
    }
    if (StringText[i] >= 91 && StringText[i] <= 96)
    {
      RevealedMessage[i] = StringText[i];
    }
    if (StringText[i]>=121 && StringText[i] <=126)
    {
      RevealedMessage[i] = StringText[i];
    }
  }

  RevealedMessage[i] = '\0';

  //Outputs
  cout << endl << "Encrypted Text Reads:  " << EncryptedMessage << 
  endl << "Plain Text: " << StringText << endl << "Code Word was \"" << codeword << "\" adjusted to: " << 

AdjustedKeyword << endl << "Text decrypted back: " << RevealedMessage << endl;

  return 0;
}
